<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="../pagination.js"></script>
  <script src="../excluirCliente.js"></script>
  <link rel="stylesheet" href="./visualizar_cliente/visualizar_cliente.css">

  <title>Document</title>
</head>
<% if(urid.Tipo=="ofoda"){ %>
  <%- include('../views/navbar') -%>
  <% }else{%>
  <%- include('../views/navbarVendedor') -%>
  <% } %> 
  <body id="body">
    <input type="hidden" value="2">
      <span id="titu" class="tit">Visualizar Clientes</span>
    <div class="center">
  <table id="tabela" class="scroll">
    <thead>
    <tr class="cabeca">
        <th id="the" class="tb_ini">ID</th>
        <th id="the">Nome</th>
        <th id="the"><span class="the">Cpf</span></th>
        <th id="the"class="tb_final"><span class="theee">Contato</span></th>
    </tr>
  </thead>
  <tbody id="paginated-list" class="corpo">
    <% for(var i = 0; i< Cliente.length; i++) {%>
            <td id="td" class="tb_ini"><%= Cliente[i].idC%></td>
            <td id="td" ><%= Cliente[i].Nome%></td>
            <td id="td" ><%= Cliente[i].Cpf%></td>
            <td id="td" class="cont"><%= Cliente[i].Contato%>
          <button class="modify" onclick="window.location.href='AtualizarCliente?id=<%=Cliente[i].idC%>'"></button><button class="delete" id=<%= Cliente[i].idC%> onclick="deleteCliente(this.id)"></button></td> 
          </tr>
          <%}%>

          <nav class="pagination-container">
              <button class="pagination-button" id="prev-button" aria-label="Previous page" title="Previous page">
                &lt;
              </button>
              <div id="pagination-numbers"></div>
              <button class="pagination-button" id="next-button" aria-label="Next page" title="Next page">
                &gt;
              </bubutton>
  </ul>
  
  <%- include('../views/pagination') -%>
  <script>
        const paginationLimit = 1;
  
  </script>
  </body>
  </html>

<script>
const paginationNumbers = document.getElementById("pagination-numbers");
const paginatedList = document.getElementById("paginated-list");
const listItems = paginatedList.querySelectorAll("td");
const nextButton = document.getElementById("next-button");
const prevButton = document.getElementById("prev-button");

const paginationLimit = 40;
const pageCount = Math.ceil(listItems.length / paginationLimit);
let currentPage = 1;

const disableButton = (button) => {
  button.classList.add("disabled");
  button.setAttribute("disabled", true);
};

const enableButton = (button) => {
  button.classList.remove("disabled");
  button.removeAttribute("disabled");
};

const handlePageButtonsStatus = () => {
  if (currentPage === 1) {
    disableButton(prevButton);
  } else {
    enableButton(prevButton);
  }

  if (pageCount === currentPage) {
    disableButton(nextButton);
  } else {
    enableButton(nextButton);
  }
};

const handleActivePageNumber = () => {
  document.querySelectorAll(".pagination-number").forEach((button) => {
    button.classList.remove("active");
    const pageIndex = Number(button.getAttribute("page-index"));
    if (pageIndex == currentPage) {
      button.classList.add("active");
    }
  });
};

const appendPageNumber = (index) => {
  const pageNumber = document.createElement("button");
  pageNumber.className = "pagination-number";
  pageNumber.innerHTML = index;
  pageNumber.setAttribute("page-index", index);
  pageNumber.setAttribute("aria-label", "Page " + index);

  paginationNumbers.appendChild(pageNumber);
};

const getPaginationNumbers = () => {
  for (let i = 1; i <= pageCount; i++) {
    appendPageNumber(i);
  }
};

const setCurrentPage = (pageNum) => {
  currentPage = pageNum;

  handleActivePageNumber();
  handlePageButtonsStatus();
  
  const prevRange = (pageNum - 1) * paginationLimit;
  const currRange = pageNum * paginationLimit;

  listItems.forEach((item, index) => {
    item.classList.add("hidden");
    if (index >= prevRange && index < currRange) {
      item.classList.remove("hidden");
    }
  });
};

window.addEventListener("load", () => {
  getPaginationNumbers();
  setCurrentPage(1);

  prevButton.addEventListener("click", () => {
    setCurrentPage(currentPage - 1);
  });

  nextButton.addEventListener("click", () => {
    setCurrentPage(currentPage + 1);
  });

  document.querySelectorAll(".pagination-number").forEach((button) => {
    const pageIndex = Number(button.getAttribute("page-index"));

    if (pageIndex) {
      button.addEventListener("click", () => {
        setCurrentPage(pageIndex);
      });
    }
  });
});

</script>