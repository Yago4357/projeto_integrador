<!DOCTYPE html>
<html lang="en">
  <head>
    <title>
      Visualizar Produtos
    </title>
    <meta charset="UTF-8" />
    <meta http-equiv="refresh" content="60">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="./excluirItem.js"></script><!--Trocar o caminho -->
    <link rel="stylesheet" href="./visualizarProd/visualizarProd.css">
  </head>

  <% if(urid.Tipo=="ofoda"){ %>
    <%- include('../views/navbar') -%>
    <% }else{%>
    <%- include('../views/navbarVendedor') -%>
    <% } %> 

    <span id="titu" class="tit">Visualizar Produtos</span>
    <div id="center" class="center">
        <table id="tabela" class="scroll">
            <thead>
            <tr id class="cabeca">
                <th id="the" class="tb_ini">ID</th>
                <th id="the">Nome</th>
                <th id="the"><span class="the">Fornecedor</span></th>
                <th id="the"><span class="thee">Valor</span></th>
                <th id="the" class="tb_final"><span class="theee">Quantidade</span></th>
            </tr>
        </thead>
        <tbody id="paginated-list" class="corpo">
          <% for(var i = 0; i< Produto.length; i++) {%>
            <tr class="itens">
                  <td id="td" class="tb_ini"><%= Produto[i].Idprod%></td>
                  <td id="td" ><%= Produto[i].Nome%></td>
                  <td id="td" ><%= Produto[i].Fornecedor%></std>
                  <td id="td" ><%= Produto[i].Valor%> R$</td>
                  <td id="td" class="tb_final"><span id="final"><%= Produto[i].Quantidade%></span>

                  <div class="op">
                      <button class="modify" onclick="window.location.href='AtualizarProduto?id=<%=Produto[i].Idprod%>'"></button>
                      <button class="delete" id=<%= Produto[i].Idprod%> onclick="deleteProd(this.id)"></button></td> 
                  </div>

                </tr>
                <%}%>
                
</tbody>
<%- include('../views/pagination') -%>
</body>
</html>
<script>
    const paginationNumbers = document.getElementById("pagination-numbers");
    const paginatedList = document.getElementById("paginated-list");
    const listItems = paginatedList.querySelectorAll("td");
    const nextButton = document.getElementById("next-button");
    const prevButton = document.getElementById("prev-button");
    
    const paginationLimit = 45;
    const pageCount = Math.ceil(listItems.length / paginationLimit);
    let currentPage = 1;
    
    const disableButton = (button) => {
      button.classList.add("disabled");
      button.setAttribute("disabled", true);
    };
    
    const enableButton = (button) => {
      button.classList.remove("disabled");
      button.removeAttribute("disabled");
    };
    
    const handlePageButtonsStatus = () => {
      if (currentPage === 1) {
        disableButton(prevButton);
      } else {
        enableButton(prevButton);
      }
    
      if (pageCount === currentPage) {
        disableButton(nextButton);
      } else {
        enableButton(nextButton);
      }
    };
    
    const handleActivePageNumber = () => {
      document.querySelectorAll(".pagination-number").forEach((button) => {
        button.classList.remove("active");
        const pageIndex = Number(button.getAttribute("page-index"));
        if (pageIndex == currentPage) {
          button.classList.add("active");
        }
      });
    };
    
    const appendPageNumber = (index) => {
      const pageNumber = document.createElement("button");
      pageNumber.className = "pagination-number";
      pageNumber.innerHTML = index;
      pageNumber.setAttribute("page-index", index);
      pageNumber.setAttribute("aria-label", "Page " + index);
    
      paginationNumbers.appendChild(pageNumber);
    };
    
    const getPaginationNumbers = () => {
      for (let i = 1; i <= pageCount; i++) {
        appendPageNumber(i);
      }
    };
    
    const setCurrentPage = (pageNum) => {
      currentPage = pageNum;
    
      handleActivePageNumber();
      handlePageButtonsStatus();
      
      const prevRange = (pageNum - 1) * paginationLimit;
      const currRange = pageNum * paginationLimit;
    
      listItems.forEach((item, index) => {
        item.classList.add("hidden");
        if (index >= prevRange && index < currRange) {
          item.classList.remove("hidden");
        }
      });
    };
    
    window.addEventListener("load", () => {
      getPaginationNumbers();
      setCurrentPage(1);
    
      prevButton.addEventListener("click", () => {
        setCurrentPage(currentPage - 1);
      });
    
      nextButton.addEventListener("click", () => {
        setCurrentPage(currentPage + 1);
      });
    
      document.querySelectorAll(".pagination-number").forEach((button) => {
        const pageIndex = Number(button.getAttribute("page-index"));
    
        if (pageIndex) {
          button.addEventListener("click", () => {
            setCurrentPage(pageIndex);
          });
        }
      });
    });
    
    </script>